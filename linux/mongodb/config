#指定端口
port=27017

#最大连接数
maxConns=10

#日志路径
logpath=/home/mongodb/mongodb.log

#mongdb进程启动后，是否以追加的形式添加日志
logappend=true

#
#syslog=false

pidfilepath=/home/mongodb/mongodb.pid

#指定存储身份验证信息的密钥文件的路径。默认缺省
keyFile=/home/mongodb/.key/keyfile

#是否使用套接字文件,默认为false，即使用套接字文件
#nounixsocket=false

#套接字文件路径，默认/tmp
#unixSocketPrefix=/tmp

#是否后台运行
fork=true

#用户认证，默认false,不需要认证。当设置为true时，进入数据库需要auth验证，当数据库里没有用户，则不需要验证也可以操作，直到创建了第一个用户，之后操作都需要验证
auth=true

#禁止用户认证
#noauth=true

#设置为true会强制mongodb每4s报告cpu利用率和io等待。把日志信息写到标准输出或日志文件，默认为false
#cpu=true

#数据存放目录
dbpath=/home/mongodb/data

#创建一个非常详细的故障排除和各种错误的诊断日志记录。默认0。设置为1，为在dbpath目录里生成一个diaglog.开头的日志文件。产生的日志可以用mongosniff来查看
#diaglog=0

#设置为true,修改数据目录存储模式，每个数据库的文件存储在DBPATH指定的目录的不同文件夹中，使用此选项，可以配置mongodb将数据存储在不同的磁盘设备上，以提高写入吞吐量或磁盘容量。默认为false。要是在运行一段时间 的数据库中开启该参数，会导致原始的数据都会消失，因为数据目录都不同了，除非迁移现有的数据文件到directoryperdb产生的数据库目录中
directoryperdb=true

#是否启动操作日志，以确保写入持久性数据的一致性
#journal=false

#同上
nojournal=true

#刷写提交机制,单位毫秒
#journalCommitInterval=100

#是否支持ipv6，默认false
#ipv6=false

#是否允许JSONP访问通过一个HTTP接口，默认false
#jsonp=false

#是否禁止http接口，即28017端口开启的服务。默认false
#nohttpinterface=false

#预分配方式，默认false。使用预分配方式来保证写入性能的稳定，预分配在后台进行，并且每个预分配的文件都用0进行填充，这会让mongodb始终保持额外的空间和空余的数据文件，从而避免了数据增长过快而带来的分配磁盘空间引起的阻塞。配置为false可以缩短启动时间，但在正常操作过程中，可能会导致性能下降
#noprealloc=false

#是否禁止表扫描操作。默认false，不禁止
#notablescan=false

#是否禁止脚本引擎。默认为false,不禁止
#noscripting=false

#命名空间的文件大小。感觉有点像磁盘格式化中的inodes部分
#nssize=16

#数据库分析等级,默认0关闭
#profile=0

#记录profile分析的慢查询时间
#slowms=100

#配额，默认为false,是否开启每个数据库最多文件数的限制
#quota=false

#当quota=true有限，设置quota数量
#quotaFiles=8

#默认false，如为true,即使用REST API
#rest=false

#启动时是否修复数据库
#repair=false

#修复路径，默认是在dbpath路径下的_tmp目录
#repairpath

#其他选项说明请参考mongodb --help或官方文档
#本配置参考了文档 http://www.cnblogs.com/zhoujinyi/p/3130231.html
